{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentDate = () => new Date().toISOString().split(\"T\")[0];\nconst getCurrentTime = () => new Date().toLocaleTimeString([], {\n  hour: '2-digit',\n  minute: '2-digit',\n  hour12: true\n});\nconst App = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(() => !!localStorage.getItem(\"activeUser\"));\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(() => localStorage.getItem(\"activeUser\") || \"\");\n  const [users, setUsers] = useState(() => {\n    const saved = localStorage.getItem(\"users\");\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [tasks, setTasks] = useState({});\n  const [comment, setComment] = useState(\"\");\n  const [date, setDate] = useState(getCurrentDate());\n  const [exportRange, setExportRange] = useState(\"week\");\n  const [darkMode, setDarkMode] = useState(() => JSON.parse(localStorage.getItem(\"darkMode\")) || false);\n  useEffect(() => {\n    if (user) {\n      const userTasks = localStorage.getItem(`tasks_${user}`);\n      setTasks(userTasks ? JSON.parse(userTasks) : {});\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(`tasks_${user}`, JSON.stringify(tasks));\n    }\n  }, [tasks, user]);\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\n  }, [darkMode]);\n  const handleLogin = () => {\n    if (users[username] && users[username] === password) {\n      setLoggedIn(true);\n      setUser(username);\n      localStorage.setItem(\"activeUser\", username);\n    } else {\n      alert(\"Invalid username or password!\");\n    }\n  };\n  const handleRegister = () => {\n    if (username in users) {\n      alert(\"User already exists!\");\n    } else {\n      setUsers(prev => ({\n        ...prev,\n        [username]: password\n      }));\n      alert(\"User registered successfully! Now you can log in.\");\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setUser(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    localStorage.removeItem(\"activeUser\");\n  };\n  const handleCount = delta => {\n    setTasks(prev => {\n      const current = prev[date] || {\n        count: 0,\n        comments: []\n      };\n      return {\n        ...prev,\n        [date]: {\n          ...current,\n          count: Math.max(0, current.count + delta)\n        }\n      };\n    });\n  };\n  const handleComment = () => {\n    if (!comment.trim()) return;\n    const newComment = {\n      text: comment.trim(),\n      time: getCurrentTime()\n    };\n    setTasks(prev => {\n      const current = prev[date] || {\n        count: 0,\n        comments: []\n      };\n      const comments = Array.isArray(current.comments) ? current.comments : [];\n      return {\n        ...prev,\n        [date]: {\n          ...current,\n          comments: [...comments, newComment]\n        }\n      };\n    });\n    setComment(\"\");\n  };\n  const handleCommentKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleComment();\n    }\n  };\n  const handleEditComment = index => {\n    const edited = prompt(\"Edit your comment:\", current.comments[index].text);\n    if (edited !== null) {\n      const updated = [...current.comments];\n      updated[index].text = edited;\n      setTasks(prev => ({\n        ...prev,\n        [date]: {\n          ...prev[date],\n          comments: updated\n        }\n      }));\n    }\n  };\n  const handleDeleteComment = index => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      const updated = [...current.comments];\n      updated.splice(index, 1);\n      setTasks(prev => ({\n        ...prev,\n        [date]: {\n          ...prev[date],\n          comments: updated\n        }\n      }));\n    }\n  };\n  const handleCopyComment = text => {\n    navigator.clipboard.writeText(text);\n    alert(\"Comment copied to clipboard!\");\n  };\n  const exportExcel = () => {\n    const rows = [[\"Date\", \"Count\", \"Comments\"]];\n    for (const [key, val] of Object.entries(tasks)) {\n      const d = new Date(key);\n      const now = new Date(date);\n      if (exportRange === \"week\" && getWeek(d) === getWeek(now) || exportRange === \"month\" && d.getMonth() === now.getMonth() || exportRange === \"year\" && d.getFullYear() === now.getFullYear()) {\n        const commentsArray = Array.isArray(val.comments) ? val.comments.map(c => `${c.text} (${c.time})`) : [];\n        rows.push([key, val.count, commentsArray.join(\"; \")]);\n      }\n    }\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.aoa_to_sheet(rows);\n    XLSX.utils.book_append_sheet(wb, ws, \"Tasks\");\n    XLSX.writeFile(wb, `tasks-${exportRange}-${user}.xlsx`);\n  };\n  const getWeek = date => {\n    const onejan = new Date(date.getFullYear(), 0, 1);\n    return Math.ceil(((date - onejan) / 86400000 + onejan.getDay() + 1) / 7);\n  };\n  const rawCurrent = tasks[date] || {\n    count: 0,\n    comments: []\n  };\n  const current = {\n    ...rawCurrent,\n    comments: Array.isArray(rawCurrent.comments) ? rawCurrent.comments : []\n  };\n\n  // Add Tailwind animation classes\n  const animatedButton = \"transition-transform duration-200 ease-in-out transform hover:scale-105\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode ? 'bg-gray-900 text-white' : 'bg-[url(https://www.transparenttextures.com/patterns/cubes.png)] bg-white'} min-h-screen p-6`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"S1brt97IMVmjetesEshQO3A8OM8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","getCurrentDate","Date","toISOString","split","getCurrentTime","toLocaleTimeString","hour","minute","hour12","App","_s","loggedIn","setLoggedIn","localStorage","getItem","username","setUsername","password","setPassword","user","setUser","users","setUsers","saved","JSON","parse","tasks","setTasks","comment","setComment","date","setDate","exportRange","setExportRange","darkMode","setDarkMode","userTasks","setItem","stringify","handleLogin","alert","handleRegister","prev","handleLogout","removeItem","handleCount","delta","current","count","comments","Math","max","handleComment","trim","newComment","text","time","Array","isArray","handleCommentKeyPress","e","key","preventDefault","handleEditComment","index","edited","prompt","updated","handleDeleteComment","window","confirm","splice","handleCopyComment","navigator","clipboard","writeText","exportExcel","rows","val","Object","entries","d","now","getWeek","getMonth","getFullYear","commentsArray","map","c","push","join","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","onejan","ceil","getDay","rawCurrent","animatedButton","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\n\nconst getCurrentDate = () => new Date().toISOString().split(\"T\")[0];\nconst getCurrentTime = () => new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true });\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(() => !!localStorage.getItem(\"activeUser\"));\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(() => localStorage.getItem(\"activeUser\") || \"\");\n  const [users, setUsers] = useState(() => {\n    const saved = localStorage.getItem(\"users\");\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [tasks, setTasks] = useState({});\n  const [comment, setComment] = useState(\"\");\n  const [date, setDate] = useState(getCurrentDate());\n  const [exportRange, setExportRange] = useState(\"week\");\n  const [darkMode, setDarkMode] = useState(() => JSON.parse(localStorage.getItem(\"darkMode\")) || false);\n\n  useEffect(() => {\n    if (user) {\n      const userTasks = localStorage.getItem(`tasks_${user}`);\n      setTasks(userTasks ? JSON.parse(userTasks) : {});\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(`tasks_${user}`, JSON.stringify(tasks));\n    }\n  }, [tasks, user]);\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const handleLogin = () => {\n    if (users[username] && users[username] === password) {\n      setLoggedIn(true);\n      setUser(username);\n      localStorage.setItem(\"activeUser\", username);\n    } else {\n      alert(\"Invalid username or password!\");\n    }\n  };\n\n  const handleRegister = () => {\n    if (username in users) {\n      alert(\"User already exists!\");\n    } else {\n      setUsers((prev) => ({ ...prev, [username]: password }));\n      alert(\"User registered successfully! Now you can log in.\");\n    }\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setUser(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    localStorage.removeItem(\"activeUser\");\n  };\n\n  const handleCount = (delta) => {\n    setTasks((prev) => {\n      const current = prev[date] || { count: 0, comments: [] };\n      return {\n        ...prev,\n        [date]: { ...current, count: Math.max(0, current.count + delta) },\n      };\n    });\n  };\n\n  const handleComment = () => {\n    if (!comment.trim()) return;\n    const newComment = {\n      text: comment.trim(),\n      time: getCurrentTime(),\n    };\n    setTasks((prev) => {\n      const current = prev[date] || { count: 0, comments: [] };\n      const comments = Array.isArray(current.comments) ? current.comments : [];\n      return {\n        ...prev,\n        [date]: {\n          ...current,\n          comments: [...comments, newComment],\n        },\n      };\n    });\n    setComment(\"\");\n  };\n\n  const handleCommentKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleComment();\n    }\n  };\n\n  const handleEditComment = (index) => {\n    const edited = prompt(\"Edit your comment:\", current.comments[index].text);\n    if (edited !== null) {\n      const updated = [...current.comments];\n      updated[index].text = edited;\n      setTasks((prev) => ({ ...prev, [date]: { ...prev[date], comments: updated } }));\n    }\n  };\n\n  const handleDeleteComment = (index) => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      const updated = [...current.comments];\n      updated.splice(index, 1);\n      setTasks((prev) => ({ ...prev, [date]: { ...prev[date], comments: updated } }));\n    }\n  };\n\n  const handleCopyComment = (text) => {\n    navigator.clipboard.writeText(text);\n    alert(\"Comment copied to clipboard!\");\n  };\n\n  const exportExcel = () => {\n    const rows = [[\"Date\", \"Count\", \"Comments\"]];\n    for (const [key, val] of Object.entries(tasks)) {\n      const d = new Date(key);\n      const now = new Date(date);\n      if (\n        (exportRange === \"week\" && getWeek(d) === getWeek(now)) ||\n        (exportRange === \"month\" && d.getMonth() === now.getMonth()) ||\n        (exportRange === \"year\" && d.getFullYear() === now.getFullYear())\n      ) {\n        const commentsArray = Array.isArray(val.comments) ? val.comments.map(c => `${c.text} (${c.time})`) : [];\n        rows.push([key, val.count, commentsArray.join(\"; \")]);\n      }\n    }\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.aoa_to_sheet(rows);\n    XLSX.utils.book_append_sheet(wb, ws, \"Tasks\");\n    XLSX.writeFile(wb, `tasks-${exportRange}-${user}.xlsx`);\n  };\n\n  const getWeek = (date) => {\n    const onejan = new Date(date.getFullYear(), 0, 1);\n    return Math.ceil((((date - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n  };\n\n  const rawCurrent = tasks[date] || { count: 0, comments: [] };\n  const current = {\n    ...rawCurrent,\n    comments: Array.isArray(rawCurrent.comments) ? rawCurrent.comments : [],\n  };\n\n  // Add Tailwind animation classes\n  const animatedButton = \"transition-transform duration-200 ease-in-out transform hover:scale-105\";\n\n  return (\n    <div className={`${darkMode ? 'bg-gray-900 text-white' : 'bg-[url(https://www.transparenttextures.com/patterns/cubes.png)] bg-white'} min-h-screen p-6`}>\n      {/* Remaining UI same - just apply animatedButton to comment action buttons and include persistent dark mode toggle */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}